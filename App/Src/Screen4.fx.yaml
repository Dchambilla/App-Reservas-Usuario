Screen4 As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |-
        =// Establece la fecha seleccionada como la fecha actual.
        Set(
            _dateSelected,
            Today()
        );
        // Establece el primer día del mes actual.
        Set(
            _firstDayOfMonth,
            DateAdd(
                Today(),
                1 - Day(Today()),
                TimeUnit.Days
            )
        );
        // Establece el primer día visible en el calendario, retrocediendo a la primera fila completa antes del mes.
        Set(
            _firstDayInView,
            DateAdd(
                _firstDayOfMonth,
                -(Weekday(_firstDayOfMonth) - 2 + 1),
                TimeUnit.Days
            )
        );
        // Establece el último día del mes actual.
        Set(
            _lastDayOfMonth,
            DateAdd(
                DateAdd(
                    _firstDayOfMonth,
                    1,
                    TimeUnit.Months
                ),
                -1,
                TimeUnit.Days
            )
        );
        Set(
            _calendarVisible,
            true
        );
        If(
            IsBlank(Dropdown2_6.Selected.Value),
            Set(EspacioSeleccionado, "Cancha Hockey")
        );

    "'Rectangle 4_5' As rectangle":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DisabledFill: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(0, 56, 101, 1)
        FocusedBorderThickness: =4
        Height: =141
        HoverFill: =RGBA(0, 56, 101, 1)
        PressedFill: =RGBA(0, 120, 212, 1)
        Width: =640
        ZIndex: =1

    "'escudo 2_5' As image":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledFill: =RGBA(0, 0, 0, 0)
        FocusedBorderThickness: =4
        Height: =118
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverFill: =RGBA(0, 0, 0, 0)
        Image: =image29140
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        PressedFill: =RGBA(0, 0, 0, 0)
        Width: =128
        X: =256
        Y: =19
        ZIndex: =4

    "'Rectangle 12_5' As rectangle":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DisabledFill: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(0, 56, 101, 1)
        FocusedBorderThickness: =4
        Height: =49
        HoverFill: =RGBA(0, 56, 101, 1)
        PressedFill: =RGBA(0, 120, 212, 1)
        Width: =507
        X: =72
        Y: =151
        ZIndex: =5

    "'Reserva de espacios deportivos_4' As label":
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Color: =RGBA(255, 251.8125, 251.8125, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Height: =24
        LineHeight: =1.361816
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Size: =13.5
        Text: ="Espacio Deportivo"
        VerticalAlign: =VerticalAlign.Top
        Width: =496
        X: =83
        Y: =161
        ZIndex: =6

    Dropdown2_6 As dropdown:
        BorderColor: =RGBA(0, 18, 107, 1)
        ChevronBackground: =RGBA(56, 96, 178, 1)
        ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
        ChevronDisabledFill: =RGBA(244, 244, 244, 1)
        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
        ChevronHoverFill: =RGBA(255, 255, 255, 1)
        Default: ="Cancha Hockey"
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Height: =47
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, 1)
        Items: =Choices([@Reservas].EspacioDeportivo)
        OnChange: |+
            =Set(EspacioSeleccionado,Dropdown2_6.Selected.Value); // Seteo del espacio seleccionado basado en el valor seleccionado en el dropdown Dropdown2_6 
            Set(FiltradoEspacio, Filter(Reservas, EspacioDeportivo.Value = EspacioSeleccionado));// Filtrado de reservas para incluir solo aquellas asociadas al espacio deportivo seleccionado
            Set(FiltradoFecha, Filter(FiltradoEspacio, _dateSelected >= DateValue(FechaInicio) && _dateSelected<= DateValue(FechaTermino))); // Filtrado adicional por fecha, seleccionando reservas dentro del rango definido por FechaInicio y FechaTermino
            Set(FiltradoDias, Filter(FiltradoFecha, !IsBlank(Dias) && Text(_dateSelected,"dddd") in Dias.Value)); // Filtrado adicional por días específicos de la semana (si se han definido en la columna 'Dias')
            
        OnSelect: =
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(0, 18, 107, 1)
        SelectionFill: =RGBA(56, 96, 178, 1)
        Size: =13
        Width: =357
        X: =148
        Y: =206
        ZIndex: =7

    Calendario_3 As group:
        Height: =5
        Width: =5
        X: =53
        Y: =20
        ZIndex: =13

        LblMonthSelected1_5 As label:
            Align: =Align.Center
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =45
            OnSelect: |
                =Set(EspacioSeleccionado,Dropdown2_6.Selected.Value);
                Set(FiltradoEspacio, Filter(Reservas, EspacioDeportivo.Value = EspacioSeleccionado));
                Set(FiltradoFecha, Filter(FiltradoEspacio, _dateSelected >= DateValue(FechaInicio) && _dateSelected<= DateValue(FechaTermino)));
                Set(FiltradoDias, Filter(FiltradoFecha, !IsBlank(Dias) && Text(_dateSelected,"dddd") in Dias.Value));
            Size: =15
            Text: =Text(_firstDayOfMonth, "mmmm yyyy")
            Visible: =_calendarVisible
            Width: =640
            Wrap: =false
            Y: =262
            ZIndex: =8

        iconPrevMonth1_5 As icon.ChevronLeft:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 18, 107, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            DisplayMode: |-
                =If(
                    _firstDayOfMonth > Today(),
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Height: =45
            Icon: =Icon.BackArrow
            OnSelect: |
                =// Establece la variable _firstDayOfMonth al primer día del mes anterior
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));
                // Establece _firstDayInView al primer día visible en el calendario actual, considerando el día de la semana
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
                // Establece _lastDayOfMonth al último día del mes anterior
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
                /* 
                   Recopila eventos del calendario para todos los días en la vista del mes actual. 
                   Actualiza _minDate para evitar la recopilación de datos duplicados si el usuario vuelve a esta vista del mes.
                */
                If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayOfMonth));
            PaddingBottom: =7
            PaddingLeft: =7
            PaddingRight: =7
            PaddingTop: =7
            TabIndex: =0
            Tooltip: ="Ver el mes anterior"
            Visible: =_calendarVisible
            Width: =95
            X: =5
            Y: =259
            ZIndex: =9

        iconNextMonth1_5 As icon.ChevronRight:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 18, 107, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            DisplayMode: |-
                =If(
                    Text(_firstDayOfMonth, "mmmm") = "diciembre",
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Height: =45
            Icon: =Icon.NextArrow
            OnSelect: |-
                =// Establece la variable _firstDayOfMonth al primer día del próximo mes
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months)); 
                // Establece _firstDayInView al primer día visible en el calendario actual, considerando el día de la semana
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
                /* 
                   Recopila eventos del calendario para todos los días en la vista del mes actual. 
                   Actualiza _maxDate para evitar la recopilación de datos duplicados si el usuario vuelve a esta vista del mes.
                */
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
                // Comprueba si _lastDayOfMonth es mayor que _maxDate y, si es así, actualiza _maxDate
                If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth);)
            PaddingBottom: =7
            PaddingLeft: =7
            PaddingRight: =7
            PaddingTop: =7
            TabIndex: =0
            Tooltip: ="Ver el mes siguiente"
            Visible: =_calendarVisible
            Width: =86
            X: =554
            Y: =262
            ZIndex: =10

        WeekdayGallery1_5 As gallery.WeekdayGallery:
            AccessibleLabel: ="Días de la semana"
            BorderColor: =RGBA(0, 18, 107, 1)
            BorderThickness: =2
            Fill: =RGBA(0, 134, 208, 1)
            Height: =37
            Items: =Calendar.WeekdaysShort()
            OnSelect: |
                =Set(EspacioSeleccionado,Dropdown2_6.Selected.Value);
                Set(FiltradoEspacio, Filter(Reservas, EspacioDeportivo.Value = EspacioSeleccionado));
                Set(FiltradoFecha, Filter(FiltradoEspacio, _dateSelected >= DateValue(FechaInicio) && _dateSelected<= DateValue(FechaTermino)));
                Set(FiltradoDias, Filter(FiltradoFecha, !IsBlank(Dias) && Text(_dateSelected,"dddd") in Dias.Value));
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =95
            Visible: =_calendarVisible
            Y: =309
            ZIndex: =11

            Title1_5 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =37
                OnSelect: =Select(Parent)
                Size: =10
                Text: =ThisItem.Value
                Width: =56
                Wrap: =false
                ZIndex: =1

        MonthDayGallery1_5 As gallery.MonthDayGallery:
            AccessibleLabel: ="Días del mes seleccionado"
            BorderColor: =RGBA(39, 67, 125, 1)
            BorderThickness: =2
            Height: =372
            Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
            Layout: =Layout.Vertical
            OnSelect: |+
                =
                Set(EspacioSeleccionado,Dropdown2_6.Selected.Value); // Seteo del espacio seleccionado para cambios en el dropdown de Espacio deportivo
                Set(FiltradoEspacio, Filter(Reservas, EspacioDeportivo.Value = EspacioSeleccionado)); // Filtro de reservas basado en el espacio deportivo seleccionado
                Set(FiltradoFecha, Filter(FiltradoEspacio, _dateSelected >= DateValue(FechaInicio) && _dateSelected<= DateValue(FechaTermino))); // Filtro adicional por fecha dentro del rango definido por FechaInicio y FechaTermino
                Set(FiltradoDias, Filter(FiltradoFecha, !IsBlank(Dias) && Text(_dateSelected,"dddd") in Dias.Value)); //Filtro adicional por días específicos de la semana (si se han definido en la columna 'Dias')
                
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =60
            Visible: =_calendarVisible
            WrapCount: =7
            Y: =347
            ZIndex: =12

            Subcircle1_5 As circle:
                BorderColor: =RGBA(0, 18, 107, 1)
                Fill: =RGBA(56, 96, 178, 1)
                Height: =3 * Title2_10.Size
                OnSelect: =Select(Parent)
                Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title2_10.Visible)
                Width: =Self.Height
                X: =MonthDayGallery1_5.TemplateWidth/2 - Self.Width/2
                Y: =MonthDayGallery1_5.TemplateHeight / 2 - Self.Height / 2
                ZIndex: =2

            Title2_10 As label:
                Align: =Align.Center
                BorderColor: =RGBA(56, 96, 178, 1)
                Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected1_5.Color)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =
                DisplayMode: |
                    =With(
                        {
                            calendarDate: DateAdd(
                                _firstDayInView,
                                ThisItem.Value
                            )
                        },
                        If(
                            Or(
                                calendarDate < Today(),
                                Weekday(calendarDate) in [1.7] ||
                                Abs(Self.Text - ThisItem.Value) > 10
                            ),
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    )
                Fill: |-
                    =/*
                       El valor de relleno cambia si el día del elemento de la galería es hoy o si está fuera del mes actual.
                    */
                    If(
                        /* La fecha seleccionada es hoy y coincide con el día del elemento de la galería */
                        DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                        /* Hoy cuando no está seleccionado */
                        DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1_5.Fill, 0.67), 
                        /* El día está fuera del rango del mes actual seleccionado */
                        Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
                FocusedBorderColor: =Self.Color
                FocusedBorderThickness: =2
                Height: =MonthDayGallery1_5.TemplateHeight
                OnSelect: |-
                    =// Establece _dateSelected al día seleccionado en el calendario actual
                    Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days));
                    // Establece EspacioSeleccionado al valor seleccionado en el dropdown de Espacio Seleccionado
                    Set(EspacioSeleccionado,Dropdown2_6.Selected.Value);
                    // Filtra reservas para incluir solo aquellas asociadas al espacio deportivo seleccionado
                    Set(FiltradoEspacio, Filter(Reservas, EspacioDeportivo.Value = EspacioSeleccionado));
                    // Filtra reservas adicionales por fecha dentro del rango definido por FechaInicio y FechaTermino
                    Set(FiltradoFecha, Filter(FiltradoEspacio, _dateSelected >= DateValue(FechaInicio) && _dateSelected<= DateValue(FechaTermino)));
                    // Filtra reservas adicionales por días específicos de la semana (si se han definido en la columna 'Dias')
                    Set(FiltradoDias, Filter(FiltradoFecha, !IsBlank(Dias) && Text(_dateSelected,"dddd") in Dias.Value));
                    // Convierte el día seleccionado a mayúsculas y guarda en la colección DiaSeleccionado
                    ClearCollect(DiaSeleccionado,Upper(Left(Text(_dateSelected, "dddd"), 1)) & Mid(Text(_dateSelected, "dddd"), 2, Len(Text(_dateSelected, "dddd"))));
                Size: =12
                TabIndex: =0
                Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
                Visible: |-
                    =/*
                       Este elemento está en una fila que no contiene días del mes visible. 
                       Está en la fila después de la fila donde ocurre el último día del mes.
                    */
                    !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
                Width: =MonthDayGallery1_5.TemplateWidth
                Wrap: =false
                ZIndex: =3

    GaleriaFechas_1 As group:
        Height: =5
        Width: =5
        X: =-666
        Y: =-99
        ZIndex: =28

        "GalaeriaFechas_1 As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver5.0'":
            BorderColor: =RGBA(39, 67, 125, 1)
            BorderThickness: =1
            DelayItemLoading: =true
            Height: =360
            Items: =HorasDisponibles
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |-
                =Set(aux,ThisItem.Value);
                Set(varShowPopUp,true)
            Selectable: =false
            TemplatePadding: =0
            TemplateSize: =105
            WrapCount: =2
            Y: =776
            ZIndex: =26

            Title3_1 As label:
                Color: =RGBA(50, 49, 48, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisplayMode: =DisplayMode.View
                FontWeight: =
                Height: =Self.Size * 1.8
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedColor: =
                Size: =15
                Text: =ThisItem.Value
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.TemplateWidth - 86
                X: =16
                Y: =12
                ZIndex: =2

            Subtitle2_1 As label:
                Color: =RGBA(255, 255, 255, 1)
                DisabledColor: =RGBA(56, 96, 178, 1)
                Fill: |-
                    =If(Subtitle2_1.Text = "Reservado" , RGBA(255, 0, 0, 1), 
                        If(Subtitle2_1.Text = "Disponible", RGBA (15,203,0,1)
                        )
                    )
                Font: =Font.Arial
                FontWeight: =
                Height: =24
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =13
                Text: |-
                    =// Condicional If: Verifica si hay alguna reserva en el horario y día específico seleccionado
                    If(
                        CountRows(
                            Filter(
                                FiltradoFecha, // Filtrar reservas según la fecha seleccionada
                                TimeValue(FechaInicio) <= TimeValue(  
                                    // Verificar hora de inicio
                                    Left(
                                        ThisItem.Value,
                                        5
                                    ) 
                                    // Verificar hora de termino
                                ) && TimeValue(FechaTermino) >= TimeValue(
                                    Right(
                                        ThisItem.Value,
                                        5
                                    ) 
                                    // Verificar si el día está dentro de los días permitidos
                                ) && Text(
                                    _dateSelected,
                                    "dddd"
                                ) in Lower(Dias.Value)
                            )
                        ) > 0, // Si hay al menos una reserva
                        "Reservado", // Valor devuelto si hay reservas
                        "Disponible" // Valor devuelto si no hay reservas
                    )
                VerticalAlign: =VerticalAlign.Top
                Width: =107
                X: =Title3_1.X
                Y: =Title3_1.Y + Title3_1.Height
                ZIndex: =3

            Icon5 As icon.ChevronRight:
                BorderColor: =RGBA(166, 166, 166, 1)
                Color: =RGBA(0, 120, 212, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(220, 220, 220, 1)
                DisabledFill: =RGBA(0, 0, 0, 0)
                DisplayMode: |-
                    =// Verifica si el espacio está reservado; en tal caso, deshabilita el modo de visualización para impedir el envío de solicitudes de reservación.
                    If(Subtitle2_1.Text = "Reservado", DisplayMode.Disabled)
                FocusedBorderThickness: =4
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                HoverFill: =RGBA(0, 0, 0, 0)
                Icon: =Icon.ChevronRight
                OnSelect: =Select(Parent)
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                PressedFill: =RGBA(0, 0, 0, 0)
                X: =238
                Y: =12
                ZIndex: =5

        Label11_1 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Fill: =RGBA(0, 56, 101, 1)
            FontWeight: =FontWeight.Bold
            Height: =57
            Size: =13
            Text: =Text(_dateSelected,DateTimeFormat.ShortDate)
            Width: =640
            Y: =719
            ZIndex: =27

    Arrow1_1 As arrow.backArrow:
        BorderColor: =RGBA(0, 0, 0, 0)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Fill: =RGBA(0, 120, 212, 1)
        Height: =65
        OnSelect: =Navigate(Screen5) // Accion de retroceso a la pantalla principal
        Width: =65
        X: =40
        Y: =38
        ZIndex: =39

    Group2_1 As group:
        Height: =5
        Width: =5
        X: =60
        Y: =60
        ZIndex: =39

        Rectangle1_2 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledFill: =RGBA(166, 166, 166, 1)
            Fill: =RGBA(0, 120, 212, 0.5)
            FocusedBorderThickness: =4
            Height: =1136
            HoverFill: =RGBA(0, 120, 212, 0.5)
            PressedFill: =RGBA(0, 120, 212, 0.5)
            Visible: =varShowPopUp
            Width: =640
            ZIndex: =28

        Rectangle2_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledFill: =RGBA(166, 166, 166, 1)
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =4
            Height: =385
            HoverFill: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(255, 255, 255, 1)
            Visible: =varShowPopUp
            Width: =548
            X: =40
            Y: =367
            ZIndex: =29

        Label1_3 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(0, 54, 95, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Fill: =RGBA(255, 255, 0, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Bold
            Height: =43
            Size: =19
            Text: ="Confirmación de Reserva"
            Visible: =varShowPopUp
            Width: =548
            X: =40
            Y: =324
            ZIndex: =30

        Label2_1 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =56
            Size: =21
            Text: =EspacioSeleccionado
            Visible: =varShowPopUp
            Width: =234
            X: =339
            Y: =405
            ZIndex: =31

        Label3_3 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =71
            Size: =21
            Text: =Text(_dateSelected,DateTimeFormat.ShortDate) // Fecha Seleccionada con formato de dia, mes y año
            Visible: =varShowPopUp
            Width: =261
            X: =301
            Y: =461
            ZIndex: =32

        Label3_2 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =72
            Size: =21
            Text: |
                =aux //Intervalo de Fecha Solicitada
            Visible: =varShowPopUp
            Width: =231
            X: =309
            Y: =523
            ZIndex: =33

        Button1_1 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(168, 0, 0, 1)
            FocusedBorderColor: =ColorFade(Self.Fill, -75%)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =39
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
            OnSelect: |-
                =// Establece la variable varShowPopUp en falso, en caso de que ya no se quiera confirmar la reserva, para ocultar el popup de confirmación de reserva.
                Set(varShowPopUp,false);
            PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =24
            Text: ="Cancelar"
            Visible: =varShowPopUp
            Width: =172
            X: =326
            Y: =632
            ZIndex: =34

        Button3_1 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(141, 198, 63, 1)
            FocusedBorderColor: =ColorFade(Self.Fill, -75%)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =41
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
            OnSelect: |-
                =// Colección auxiliar para almacenar información sobre la fecha seleccionada en el calendario
                ClearCollect(
                    AuxCollection,
                    Table(
                        {
                            Fecha: _dateSelected,
                            NombreDia: Text(_dateSelected, "dddd"),
                            ID: Switch(
                                Text(_dateSelected, "dddd"),
                                "lunes", 0,
                                "martes", 1,
                                "miércoles", 2,
                                "jueves", 3,
                                "viernes", 4,
                                "sábado", 5,
                                "domingo", 6,
                                -1  // Valor por defecto en caso de que el día no coincida con ninguno de los anteriores
                            ),
                            Value: Switch(
                                Text(_dateSelected, "dddd"),
                                "lunes", "Lunes",
                                "martes", "Martes",
                                "miércoles", "Miércoles",
                                "jueves", "Jueves",
                                "viernes", "Viernes",
                                "sábado", "Sábado",
                                "domingo", "Domingo",
                                "Valor"  // Valor por defecto en caso de que el día no coincida con ninguno de los anteriores
                            )
                        }
                    )
                );
                // Creación o actualización de una reserva en la tabla Reservas
                Patch(
                    Reservas,
                    Defaults(Reservas),
                    {
                        Usuario: {
                            Claims: Concatenate(
                                "i:0#.f|membership|",
                                User().Email// Person email
                            ),
                            Department: "",
                            DisplayName: User().FullName,
                            Email: User().Email,
                            JobTitle: "",
                            Picture: ""
                        },
                        FechaInicio: DateValue(_dateSelected) + TimeValue(Left(aux, Find(" - ", aux) - 1)),
                        FechaTermino: DateValue(_dateSelected) + TimeValue(Mid(aux, Find(" - ", aux) + 3, Len(aux))),
                        EspacioDeportivo: Dropdown2_6.Selected, // Espacio deportivo seleccionado en el dropdown
                        Dias: AuxCollection  // Días de la semana seleccionados en la colección auxiliar
                    }
                );
                // Filtra reservas para incluir solo aquellas reservas asociadas al espacio deportivo seleccionado
                Set(FiltradoEspacio, Filter(Reservas, EspacioDeportivo.Value = EspacioSeleccionado));
                // Filtra reservas adicionales por fecha dentro del rango definido por FechaInicio y FechaTermino
                Set(FiltradoFecha, Filter(FiltradoEspacio, _dateSelected >= DateValue(FechaInicio) && _dateSelected<= DateValue(FechaTermino)));
                // Filtra reservas adicionales por días específicos de la semana (si se han definido en la columna 'Dias')
                Set(FiltradoDias, Filter(FiltradoFecha, !IsBlank(Dias) && Text(_dateSelected,"dddd") in Dias.Value));
                // Convierte el día seleccionado a mayúsculas y guarda en la colección DiaSeleccionado
                ClearCollect(DiaSeleccionado,Upper(Left(Text(_dateSelected, "dddd"), 1)) & Mid(Text(_dateSelected, "dddd"), 2, Len(Text(_dateSelected, "dddd"))));
                // Oculta el PopUp de confirmación de reserva una vez que se ha enviado el formulario de solicitud
                Set(varShowPopUp,false)
            PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =24
            Text: ="Confirmar"
            Visible: =varShowPopUp
            Width: =168
            X: =133
            Y: =632
            ZIndex: =35

        Label4_1 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =75
            Size: =21
            Text: |-
                ="Espacio Deportivo : "
            Visible: =varShowPopUp
            Width: =279
            X: =60
            Y: =397
            ZIndex: =36

        Label5_1 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =59
            Size: =21
            Text: |-
                ="Fecha Solicitada: "
            Visible: =varShowPopUp
            Width: =247
            X: =60
            Y: =461
            ZIndex: =37

        Label8_1 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =78
            Size: =21
            Text: |-
                ="Hora Solicitada:"
            Visible: =varShowPopUp
            Width: =314
            X: =60
            Y: =520
            ZIndex: =38

